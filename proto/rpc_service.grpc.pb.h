// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: rpc_service.proto
#ifndef GRPC_rpc_5fservice_2eproto__INCLUDED
#define GRPC_rpc_5fservice_2eproto__INCLUDED

#include "rpc_service.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace adaptive_system {

class SystemControl final {
 public:
  static constexpr char const* service_full_name() {
    return "adaptive_system.SystemControl";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status retrieveTuple(::grpc::ClientContext* context, const ::adaptive_system::Empty& request, ::adaptive_system::Tuple* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::Tuple>> AsyncretrieveTuple(::grpc::ClientContext* context, const ::adaptive_system::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::Tuple>>(AsyncretrieveTupleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::Tuple>> PrepareAsyncretrieveTuple(::grpc::ClientContext* context, const ::adaptive_system::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::Tuple>>(PrepareAsyncretrieveTupleRaw(context, request, cq));
    }
    virtual ::grpc::Status sendLoss(::grpc::ClientContext* context, const ::adaptive_system::Loss& request, ::adaptive_system::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::Empty>> AsyncsendLoss(::grpc::ClientContext* context, const ::adaptive_system::Loss& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::Empty>>(AsyncsendLossRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::Empty>> PrepareAsyncsendLoss(::grpc::ClientContext* context, const ::adaptive_system::Loss& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::Empty>>(PrepareAsyncsendLossRaw(context, request, cq));
    }
    virtual ::grpc::Status sendGradient(::grpc::ClientContext* context, const ::adaptive_system::NamedGradientsAccordingColumn& request, ::adaptive_system::NamedGradientsAccordingColumn* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::NamedGradientsAccordingColumn>> AsyncsendGradient(::grpc::ClientContext* context, const ::adaptive_system::NamedGradientsAccordingColumn& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::NamedGradientsAccordingColumn>>(AsyncsendGradientRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::NamedGradientsAccordingColumn>> PrepareAsyncsendGradient(::grpc::ClientContext* context, const ::adaptive_system::NamedGradientsAccordingColumn& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::NamedGradientsAccordingColumn>>(PrepareAsyncsendGradientRaw(context, request, cq));
    }
    virtual ::grpc::Status sendState(::grpc::ClientContext* context, const ::adaptive_system::PartialState& request, ::adaptive_system::QuantizationLevel* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::QuantizationLevel>> AsyncsendState(::grpc::ClientContext* context, const ::adaptive_system::PartialState& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::QuantizationLevel>>(AsyncsendStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::QuantizationLevel>> PrepareAsyncsendState(::grpc::ClientContext* context, const ::adaptive_system::PartialState& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::QuantizationLevel>>(PrepareAsyncsendStateRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::Tuple>* AsyncretrieveTupleRaw(::grpc::ClientContext* context, const ::adaptive_system::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::Tuple>* PrepareAsyncretrieveTupleRaw(::grpc::ClientContext* context, const ::adaptive_system::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::Empty>* AsyncsendLossRaw(::grpc::ClientContext* context, const ::adaptive_system::Loss& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::Empty>* PrepareAsyncsendLossRaw(::grpc::ClientContext* context, const ::adaptive_system::Loss& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::NamedGradientsAccordingColumn>* AsyncsendGradientRaw(::grpc::ClientContext* context, const ::adaptive_system::NamedGradientsAccordingColumn& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::NamedGradientsAccordingColumn>* PrepareAsyncsendGradientRaw(::grpc::ClientContext* context, const ::adaptive_system::NamedGradientsAccordingColumn& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::QuantizationLevel>* AsyncsendStateRaw(::grpc::ClientContext* context, const ::adaptive_system::PartialState& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::adaptive_system::QuantizationLevel>* PrepareAsyncsendStateRaw(::grpc::ClientContext* context, const ::adaptive_system::PartialState& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status retrieveTuple(::grpc::ClientContext* context, const ::adaptive_system::Empty& request, ::adaptive_system::Tuple* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adaptive_system::Tuple>> AsyncretrieveTuple(::grpc::ClientContext* context, const ::adaptive_system::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adaptive_system::Tuple>>(AsyncretrieveTupleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adaptive_system::Tuple>> PrepareAsyncretrieveTuple(::grpc::ClientContext* context, const ::adaptive_system::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adaptive_system::Tuple>>(PrepareAsyncretrieveTupleRaw(context, request, cq));
    }
    ::grpc::Status sendLoss(::grpc::ClientContext* context, const ::adaptive_system::Loss& request, ::adaptive_system::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adaptive_system::Empty>> AsyncsendLoss(::grpc::ClientContext* context, const ::adaptive_system::Loss& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adaptive_system::Empty>>(AsyncsendLossRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adaptive_system::Empty>> PrepareAsyncsendLoss(::grpc::ClientContext* context, const ::adaptive_system::Loss& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adaptive_system::Empty>>(PrepareAsyncsendLossRaw(context, request, cq));
    }
    ::grpc::Status sendGradient(::grpc::ClientContext* context, const ::adaptive_system::NamedGradientsAccordingColumn& request, ::adaptive_system::NamedGradientsAccordingColumn* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adaptive_system::NamedGradientsAccordingColumn>> AsyncsendGradient(::grpc::ClientContext* context, const ::adaptive_system::NamedGradientsAccordingColumn& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adaptive_system::NamedGradientsAccordingColumn>>(AsyncsendGradientRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adaptive_system::NamedGradientsAccordingColumn>> PrepareAsyncsendGradient(::grpc::ClientContext* context, const ::adaptive_system::NamedGradientsAccordingColumn& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adaptive_system::NamedGradientsAccordingColumn>>(PrepareAsyncsendGradientRaw(context, request, cq));
    }
    ::grpc::Status sendState(::grpc::ClientContext* context, const ::adaptive_system::PartialState& request, ::adaptive_system::QuantizationLevel* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adaptive_system::QuantizationLevel>> AsyncsendState(::grpc::ClientContext* context, const ::adaptive_system::PartialState& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adaptive_system::QuantizationLevel>>(AsyncsendStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adaptive_system::QuantizationLevel>> PrepareAsyncsendState(::grpc::ClientContext* context, const ::adaptive_system::PartialState& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::adaptive_system::QuantizationLevel>>(PrepareAsyncsendStateRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::adaptive_system::Tuple>* AsyncretrieveTupleRaw(::grpc::ClientContext* context, const ::adaptive_system::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::adaptive_system::Tuple>* PrepareAsyncretrieveTupleRaw(::grpc::ClientContext* context, const ::adaptive_system::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::adaptive_system::Empty>* AsyncsendLossRaw(::grpc::ClientContext* context, const ::adaptive_system::Loss& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::adaptive_system::Empty>* PrepareAsyncsendLossRaw(::grpc::ClientContext* context, const ::adaptive_system::Loss& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::adaptive_system::NamedGradientsAccordingColumn>* AsyncsendGradientRaw(::grpc::ClientContext* context, const ::adaptive_system::NamedGradientsAccordingColumn& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::adaptive_system::NamedGradientsAccordingColumn>* PrepareAsyncsendGradientRaw(::grpc::ClientContext* context, const ::adaptive_system::NamedGradientsAccordingColumn& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::adaptive_system::QuantizationLevel>* AsyncsendStateRaw(::grpc::ClientContext* context, const ::adaptive_system::PartialState& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::adaptive_system::QuantizationLevel>* PrepareAsyncsendStateRaw(::grpc::ClientContext* context, const ::adaptive_system::PartialState& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_retrieveTuple_;
    const ::grpc::internal::RpcMethod rpcmethod_sendLoss_;
    const ::grpc::internal::RpcMethod rpcmethod_sendGradient_;
    const ::grpc::internal::RpcMethod rpcmethod_sendState_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status retrieveTuple(::grpc::ServerContext* context, const ::adaptive_system::Empty* request, ::adaptive_system::Tuple* response);
    virtual ::grpc::Status sendLoss(::grpc::ServerContext* context, const ::adaptive_system::Loss* request, ::adaptive_system::Empty* response);
    virtual ::grpc::Status sendGradient(::grpc::ServerContext* context, const ::adaptive_system::NamedGradientsAccordingColumn* request, ::adaptive_system::NamedGradientsAccordingColumn* response);
    virtual ::grpc::Status sendState(::grpc::ServerContext* context, const ::adaptive_system::PartialState* request, ::adaptive_system::QuantizationLevel* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_retrieveTuple : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_retrieveTuple() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_retrieveTuple() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status retrieveTuple(::grpc::ServerContext* context, const ::adaptive_system::Empty* request, ::adaptive_system::Tuple* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestretrieveTuple(::grpc::ServerContext* context, ::adaptive_system::Empty* request, ::grpc::ServerAsyncResponseWriter< ::adaptive_system::Tuple>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_sendLoss : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_sendLoss() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_sendLoss() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status sendLoss(::grpc::ServerContext* context, const ::adaptive_system::Loss* request, ::adaptive_system::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsendLoss(::grpc::ServerContext* context, ::adaptive_system::Loss* request, ::grpc::ServerAsyncResponseWriter< ::adaptive_system::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_sendGradient : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_sendGradient() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_sendGradient() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status sendGradient(::grpc::ServerContext* context, const ::adaptive_system::NamedGradientsAccordingColumn* request, ::adaptive_system::NamedGradientsAccordingColumn* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsendGradient(::grpc::ServerContext* context, ::adaptive_system::NamedGradientsAccordingColumn* request, ::grpc::ServerAsyncResponseWriter< ::adaptive_system::NamedGradientsAccordingColumn>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_sendState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_sendState() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_sendState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status sendState(::grpc::ServerContext* context, const ::adaptive_system::PartialState* request, ::adaptive_system::QuantizationLevel* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsendState(::grpc::ServerContext* context, ::adaptive_system::PartialState* request, ::grpc::ServerAsyncResponseWriter< ::adaptive_system::QuantizationLevel>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_retrieveTuple<WithAsyncMethod_sendLoss<WithAsyncMethod_sendGradient<WithAsyncMethod_sendState<Service > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_retrieveTuple : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_retrieveTuple() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_retrieveTuple() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status retrieveTuple(::grpc::ServerContext* context, const ::adaptive_system::Empty* request, ::adaptive_system::Tuple* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_sendLoss : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_sendLoss() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_sendLoss() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status sendLoss(::grpc::ServerContext* context, const ::adaptive_system::Loss* request, ::adaptive_system::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_sendGradient : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_sendGradient() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_sendGradient() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status sendGradient(::grpc::ServerContext* context, const ::adaptive_system::NamedGradientsAccordingColumn* request, ::adaptive_system::NamedGradientsAccordingColumn* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_sendState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_sendState() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_sendState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status sendState(::grpc::ServerContext* context, const ::adaptive_system::PartialState* request, ::adaptive_system::QuantizationLevel* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_retrieveTuple : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_retrieveTuple() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::adaptive_system::Empty, ::adaptive_system::Tuple>(std::bind(&WithStreamedUnaryMethod_retrieveTuple<BaseClass>::StreamedretrieveTuple, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_retrieveTuple() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status retrieveTuple(::grpc::ServerContext* context, const ::adaptive_system::Empty* request, ::adaptive_system::Tuple* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedretrieveTuple(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::adaptive_system::Empty,::adaptive_system::Tuple>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_sendLoss : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_sendLoss() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::adaptive_system::Loss, ::adaptive_system::Empty>(std::bind(&WithStreamedUnaryMethod_sendLoss<BaseClass>::StreamedsendLoss, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_sendLoss() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status sendLoss(::grpc::ServerContext* context, const ::adaptive_system::Loss* request, ::adaptive_system::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsendLoss(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::adaptive_system::Loss,::adaptive_system::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_sendGradient : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_sendGradient() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::adaptive_system::NamedGradientsAccordingColumn, ::adaptive_system::NamedGradientsAccordingColumn>(std::bind(&WithStreamedUnaryMethod_sendGradient<BaseClass>::StreamedsendGradient, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_sendGradient() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status sendGradient(::grpc::ServerContext* context, const ::adaptive_system::NamedGradientsAccordingColumn* request, ::adaptive_system::NamedGradientsAccordingColumn* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsendGradient(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::adaptive_system::NamedGradientsAccordingColumn,::adaptive_system::NamedGradientsAccordingColumn>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_sendState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_sendState() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::adaptive_system::PartialState, ::adaptive_system::QuantizationLevel>(std::bind(&WithStreamedUnaryMethod_sendState<BaseClass>::StreamedsendState, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_sendState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status sendState(::grpc::ServerContext* context, const ::adaptive_system::PartialState* request, ::adaptive_system::QuantizationLevel* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsendState(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::adaptive_system::PartialState,::adaptive_system::QuantizationLevel>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_retrieveTuple<WithStreamedUnaryMethod_sendLoss<WithStreamedUnaryMethod_sendGradient<WithStreamedUnaryMethod_sendState<Service > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_retrieveTuple<WithStreamedUnaryMethod_sendLoss<WithStreamedUnaryMethod_sendGradient<WithStreamedUnaryMethod_sendState<Service > > > > StreamedService;
};

}  // namespace adaptive_system


#endif  // GRPC_rpc_5fservice_2eproto__INCLUDED
